

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.Render = factory());
}
(this, (function () { 'use strict';
 function renderHeaderTable(array){
    let headerTable=document.querySelector('thead');
    headerTable.innerHTML='';
    let listKey=Object.keys(array[0]);
    listKey=listKey.map((element) => "<th data-checked='1'id='"+element+"'>"+element+"<span class='tooltiptext'>Click to sort</span></th>");
    let listKeyStr=listKey.join('');  
    headerTable.innerHTML= "<tr>" + listKeyStr+ "</tr>";
}
function calculateTotal(array){
    let totalActua= array.reduce(function(pre,cur){
        return pre + parseInt(cur.actualPrice)*parseInt(cur.stockAvailable);
    },0);
    let totalaDiscount= array.reduce(function(pre,cur){
        return pre + parseInt(cur.discountPrice)*parseInt(cur.stockAvailable);
    },0);

    return "<tr>"
             +"<td colspan='2'>Tổng giá trị bằng(Price*Stock):</td>"
             +"<td>"+totalActua.toString()+"</td>"
             +"<td>"+totalaDiscount.toString()+"</td>"
             +"<td></td>"
             +"</tr>";

}
function renderBodyTable(array){
    let bodyTable=document.querySelector('tbody');
    bodyTable.innerHTML='';
    let rowArray=array.map(function(elementRow){
        let RowArr=Object.values(elementRow);
        let RowArrStr=RowArr.map((element) => "<td>"+element+"</td>");
        return "<tr>" + RowArrStr.join('')+ "</tr>"
    });
    bodyTable.innerHTML=rowArray.join('')+calculateTotal(array);
   
}
function sortnumber(checked,colum){
    if(checked){
        var newproductList=productList.sort(function(a,b){
          return parseInt(a[colum])-parseInt(b[colum])
        });
        renderBodyTable(newproductList);
        return '0';
    } else {
        var newproductList=productList.sort(function(a,b){
            return parseInt(b[colum])-parseInt(a[colum])
          });
          renderBodyTable(newproductList);
          return '1';
    }
    
}
function sortLeter(checked,colum){
    if(checked){
        let newproductList=productList.sort(function(a,b){
            let nameA = a[colum].toUpperCase();
            let nameB = b[colum].toUpperCase(); 
            if (nameA < nameB) {
              return -1;
            }
            if (nameA > nameB) {
              return 1;
            }
            return 0;
          });
        renderBodyTable(newproductList);
        return '0';
    } else {
        let newproductList=productList.sort(function(a,b){
            let nameA = a[colum].toUpperCase();
            let nameB = b[colum].toUpperCase(); 
            if (nameA < nameB) {
              return 1;
            }
            if (nameA > nameB) {
              return -1;
            }
            return 0;
          });
          renderBodyTable(newproductList);
          return '1';
    }
}
var Render = {
    renderHeaderTable: renderHeaderTable,
    calculateTotal:calculateTotal,
    renderBodyTable: renderBodyTable,
    sortnumber:sortnumber,
    sortLeter:sortLeter,
}
return Render;

})));
